---
title: "The Effects of Monetary Policy on Commodity Prices: Evidence from the Australian Economy"
author: "Inhye Kang"

execute:
  echo: false
  
bibliography: references.bib
---

> **Abstract.** This research project aims to measure the effects of monetary policy using Bayesian Structural Vector Autoregressive Model (SVAR) in Australian economy from 1990 to 2023.
>
> **Keywords.** Monetary policy shocks, Structural VARs, Impulse response functions

# Introduction

This research project aims to measure the effects of monetary policy using a Bayesian Structural Vector Autoregressive Model (SVAR) in the Australian economy from 1990 to 2023. The question addressed in this study is: How does an increase in interest rate affect commodity prices in the Australian market?

As commodity prices affect stakeholders, including businesses and government, the effect of change in commodity prices plays a large role in commodity-exporting countries like Australia. Majumder et al. (2022) argue that the lower real interest rate has a negative impact on commodity price volatility in both commodity-exporting countries, while a higher real interest rate increases the cost of borrowing, which reduces investment and output. This study aims to measure the monetary policy shocks on commodity prices using Bayesian Structural Vector Autoregression (SVAR), focusing on the Australian economy.

# Data

The study includes data from the Reserve Bank of Australia (RBA), the Australian Bureau of Statistics (ABS), International Monetary Fund (IMF) and Yahoo Finance from 1990 to 2023, adjusted in quarterly frequency from 1990 Q1 to 2023 Q4, including 136 observations. The variables selected for our analysis includes:

**GDP (GDP)**: real GDP, expressed as per million AUD
**Interest Rate (ICR)**: real interest rate where cash rate target less inflation (INF), expressed as a percentage
**Inflation (INF)**: seasonally adjusted inflation, expressed as a percentage
**Exchange rate (EXR)**: real exchange rate from AUD to USD, adjusted by the consumer price index of Australia and the United States, expressed in USD
**Commodity prices (ICP)**: index of commodity prices where base year value 2022/23 is 100, adjusted by the consumer price index
**Stock price (STP)**: real stock price using adjusted closing price of All Ordinaries Index (^AORD) divided by the consumer price index, expressed in AUD.

```{r download variables}

# Download seasonally adjusted quarterly inflation (%)

inf_download = readrba::read_rba(series_id = "GCPIAGSAQP")
inf_tmp = xts::xts(inf_download$value, inf_download$date)
inf_tmp = window(inf_tmp, start = as.Date("1990-01-01"), end = as.Date("2023-12-31"))

# Download seasonally adjusted quarterly Real GDP ($ million AUD)

gdp_download = readrba::read_rba(series_id = "GGDPCVGDP")   # Real GDP
gdp_tmp = xts::xts(gdp_download$value, gdp_download$date)
gdp_tmp = window(gdp_tmp, start = as.Date("1990-01-01"), end = as.Date("2023-12-31"))

# Download daily averaged interest rates in percentage (%)

icr_download = readrba::read_rba(series_id = "FIRMMCRTD")   # Cash Rate Target in %
icr_tmp = xts::xts(icr_download$value, icr_download$date)
icr_tmp = window(icr_tmp, start = as.Date("1990-01-01"), end = as.Date("2023-12-31"))

# Download daily exchange rate (AUD/USD Exchange Rate) in USD

exr_download = readrba::read_rba(series_id = "FXRUSD")   # Exchange rate of 1 AUD to USD
exr_tmp = xts::xts(exr_download$value, exr_download$date)
exr_tmp = window(exr_tmp, start = as.Date("1990-01-01"), end = as.Date("2023-12-31"))

# Download monthly index of commodity prices

icp_download = readrba::read_rba(series_id = "GRCPAIAD")   # Commodity prices Index
icp_tmp = xts::xts(icp_download$value, icp_download$date)
icp_tmp = window(icp_tmp, start = as.Date("1990-01-01"), end = as.Date("2023-12-31"))

# Download daily stock price (^AORD) in AUD

stp_download = tidyquant::tq_get("^AORD", from = "1990-01-01", to = "2023-12-31")
stp_tmp = xts::xts(stp_download$adjusted, stp_download$date)
stp_tmp = window(stp_tmp, start = as.Date("1990-01-01"), end = as.Date("2023-12-31"))

# Download quarterly CPI

cpi_download = readabs::read_abs(series_id = "A2325846C")   # CPI
cpi_tmp = xts::xts(cpi_download$value, cpi_download$date)
cpi_tmp = window(cpi_tmp, start = as.Date("1990-01-01"), end = as.Date("2023-12-31"))

# Download quarterly CPI for AU/US from IMF
library(imf.data)
imfCPI <- load_datasets("CPI")
cpiau = imfCPI$get_series(freq = "Q",
                       ref_area ="AU",
                       indicator = "PCPI_IX",
                       start_period = "1990-01-01",
                       end_period = "2023-12-31")
cpiau$TIME_PERIOD = zoo::as.yearqtr(cpiau$TIME_PERIOD, format = "%Y-Q%q")
cpiau_tmp = xts::xts(cpiau$Q.AU.PCPI_IX, cpiau$TIME_PERIOD)
cpiau_tmp = as.numeric(as.character(cpiau_tmp))

cpius = imfCPI$get_series(freq = "Q",
                       ref_area ="US",
                       indicator = "PCPI_IX",
                       start_period = "1990-01-01",
                       end_period = "2023-12-31")
cpius$TIME_PERIOD = zoo::as.yearqtr(cpius$TIME_PERIOD, format = "%Y-Q%q")
cpius_tmp = xts::xts(cpius$Q.US.PCPI_IX, cpius$TIME_PERIOD)
cpius_tmp = as.numeric(as.character(cpius_tmp))
```

```{r quarterly system, message=FALSE}

# Convert variables into quarterly system

library(zoo)
GDP = aggregate(gdp_tmp, as.yearqtr, function(x) mean(x, na.rm = TRUE))  # real GDP ($ M)

icr = aggregate(icr_tmp, as.yearqtr, function(x) mean(x, na.rm = TRUE))  # cash rate target (%)

INF = aggregate(inf_tmp, as.yearqtr, function(x) mean(x, na.rm = TRUE)) # inflation (%)

exr = aggregate(exr_tmp, as.yearqtr, function(x) mean(x, na.rm = TRUE))  # exchange rate (1 AUD/USD)

icp = aggregate(icp_tmp, as.yearqtr, function(x) mean(x, na.rm = TRUE))  # commodity price (Index)

stp = aggregate(stp_tmp, as.yearqtr, function(x) mean(x, na.rm = TRUE))  # stock price (AUD)

cpi = aggregate(cpi_tmp, as.yearqtr, function(x) mean(x, na.rm = TRUE))  # CPI (Index)
View(stp)
## REAL terms
# real interest rate (%)
ICR = icr-INF
# real exchange rate (AUD/USD)
EXR = exr*(cpiau_tmp/cpius_tmp)
# real commodity prices index
ICP = icp*(100/cpi)
# real stock price (AUD)
STP = stp*(100/cpi)
```
GDP, interest rate, inflation, exchange rate, commodity prices, and stock prices are plotted in Figure 1.
```{r time series plots, message=FALSE}
library(ggplot2)
library(gridExtra)

plotGDP <- ggplot2::ggplot(data = GDP, aes(x = time(GDP), y = as.vector(GDP))) +
  geom_line(color = "blue", linewidth = 1) + 
  labs(title = "GDP ($ million AUD)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotICR <- ggplot2::ggplot(data = ICR, aes(x = time(ICR), y = as.vector(ICR))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 1, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Interest rate (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotINF <- ggplot2::ggplot(data = INF, aes(x = time(INF), y = as.vector(INF))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Inflation (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotEXR <- ggplot2::ggplot(data = EXR, aes(x = time(EXR), y = as.vector(EXR))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 1, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Exchange rate (AUD/USD)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotICP <- ggplot2::ggplot(data = ICP, aes(x = time(ICP), y = as.vector(ICP))) +
  geom_line(color = "blue", linewidth = 1) + 
  labs(title = "Commodity prices (Index)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotSTP <- ggplot2::ggplot(data = STP, aes(x = time(STP), y = as.vector(STP))) +
  geom_line(color = "blue", linewidth = 1) + 
  labs(title = "Stock price ($ AUD)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

grid.arrange(plotGDP, plotICR, plotINF, plotEXR, plotICP, plotSTP, nrow = 3, ncol = 2)
```

GDP exhibits an upward trend except for a trough during the period of COVID-19. Interest rate depict a gradual downward trend, however from 2022 Q4, there is a significant increase in interest rate. Commodity prices and stock prices show a significant increase during the Global Financial Crisis.

In the model, all the variables except for interest rates and inflation are transformed in log difference form for percentage change interpretation. In this stage, only the sample including all variables ranging from 1990 Q2 to 2023 Q4 is considered in the following section.

```{r log scale}
logGDP = diff(log(GDP))
logEXR = diff(log(EXR))
logICP = diff(log(ICP))
logSTP = diff(log(STP))
```

```{r log difference plot}
plotlogGDP <- ggplot2::ggplot(data = logGDP, aes(x = time(logGDP), y = as.vector(logGDP))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "GDP (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotICR <- ggplot2::ggplot(data = ICR, aes(x = time(ICR), y = as.vector(ICR))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 1, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Interest rate (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotINF <- ggplot2::ggplot(data = INF, aes(x = time(INF), y = as.vector(INF))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Inflation (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotlogEXR <- ggplot2::ggplot(data = logEXR, aes(x = time(logEXR), y = as.vector(logEXR))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Exchange rate (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotlogICP <- ggplot2::ggplot(data = logICP, aes(x = time(logICP), y = as.vector(logICP))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Commodity price (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

plotlogSTP <- ggplot2::ggplot(data = logSTP, aes(x = time(logSTP), y = as.vector(logSTP))) +
  geom_line(color = "blue", linewidth = 1) + 
  geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.5) +
  labs(title = "Stock price (%)",
       x = "Date",
       y = "") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 45, hjust = 1))

grid.arrange(plotlogGDP, plotICR, plotINF, plotlogEXR, plotlogICP, plotlogSTP, nrow = 3, ncol = 2)
```

## Descriptive statistics

```{r descriptive statistics, message=FALSE}
# Final dataset
variables = merge(logGDP, ICR, INF, logEXR, logICP, logSTP)
colnames(variables) = c("GDP", "Interest rate", "Inflation", "Exchange rate", "Commodity price", "Stock price")
variables <- variables[-1, ]
View(variables)

library(psych)
library(dplyr)
#library(knitr)
summary_stats_full = psych::describe(variables[, c("GDP", "Interest rate", "Inflation", "Exchange rate", "Commodity price", "Stock price")], na.rm = TRUE)
summary_stats = summary_stats_full[, c("n", "mean", "sd", "min", "max")]
new_col_names <- c("n", "Mean", "Sd", "Min", "Max")
knitr::kable(summary_stats, caption = "Table 1: Summary of descriptive statistics", digits = 3, col.names = new_col_names)
```

## Diagonostic test
### Autocorrelation tests
```{r ACF}
par(mfrow = c(3, 2))
acf(logGDP, main = "GDP", plot = TRUE)
acf(ICR, main = "Interest rate", plot = TRUE)
acf(INF, main = "Inflation", plot = TRUE)
acf(logEXR, main = "Exchange rate", plot = TRUE)
acf(logICP, main = "Commodity price", plot = TRUE)
acf(logSTP, main = "Stock price", plot = TRUE)
```
The autocorrelation function (ACF) plots show that only the interest rate has non-zero autocorrelation for at least 20 lags, which implies that interest rate is non-stationary series. After the log difference transformation, the variables GDP, exchange rate, commodity prices and stock prices implies stationarity.

```{r PACF}
par(mfrow = c(3, 2))
pacf(logGDP, main = "logGDP", plot = TRUE)
pacf(ICR, main = "ICR", plot = TRUE)
pacf(INF, main = "INF", plot = TRUE)
pacf(logEXR, main = "logEXR", plot = TRUE)
pacf(logICP, main = "logICP", plot = TRUE)
pacf(logSTP, main = "logSTP", plot = TRUE)
```
The partial autocorrelation function (PACF) plots show that the partial autocorrelation for interest rate is significant at first lag. The partial autocorrelation for GDP, inflation, exchange rate, commodity prices and stock prices is significant at lags 5, 2, 8, 4, and 4, respectively.


## Unit root test
### Augmented Dickey-Fuller test

To test the presence of unit-root, Augmented Dickey-Fuller Test of the null hypothesis of unit-root non-stationarity was performed. 

```{r ADF on level, message=FALSE}
#| echo: false
#| message: false
#| warning: false

library(tseries)
# ADF on level
adf <- as.data.frame(matrix(nrow=6,ncol=3,NA))
rownames(adf) <- colnames(variables)
colnames(adf) <- c("Test statistic","Lag order", "p-value")

for (i in 1: ncol(variables)){
  adf_tmp                 <-  adf.test(variables[,i])
  adf[i,"Test statistic"]  <-  round(as.numeric(adf_tmp[1]),3)
  adf[i,"Lag order"]      <-  as.numeric(adf_tmp[2])
  adf[i,"p-value"]        <-  round(as.numeric(adf_tmp[4]),3)
}

knitr::kable(adf, index=TRUE)
```
The augmented Dickey-Fuller test shows that the null hypothesis was rejected at the 5% significance level, implies that all the series are unit-root stationary.

# Methodology
## Model specification
In this study, Bayesian Structural vector autoregression (SVAR) models is used to measure the dynamic and contemporaneous relationships between variables. The model is the following:

\begin{align}
B_0Y_t = b_0 + \sum_{i=1}^{p} B_iY_{t-i} + \epsilon_t
\end{align}

\begin{align}
\epsilon_t|Y_{t-1} \sim iid(0_N, I_N)
\end{align}

In the model, $Y_t$ contains six variables ordered as: (1) real GDP growth, $GDP_t$, (2) real interest rate, $ICR_t$, (3) Inflation, $INF_t$, (4) real exchange rate change from AUD to USD, $EXR_t$, (5) commodity prices change $ICP_t$, and (6) stock prices change $STP_t$.

\begin{align}
Y_t= 
\begin{pmatrix}
   GDP_t
 \\ICR_t
 \\INF_t
 \\EXR_t
 \\ICP_t
 \\STP_t
\end{pmatrix}
\end{align}



## References {.unnumbered}
Majumder, M. K., Raghavan, M., & Vespignani, J. (2022). The impact of commodity price volatility on fiscal balance and the role of real interest rate. Empirical Economics: Journal of the Institute for Advanced Studies, Vienna, Austria, 63(3), 1375–1402. https://doi.org/10.1007/s00181-021-02168-3